name: Unit Tests

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    permissions:
        checks: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      if: ${{ inputs.service == 'backend' }}
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt
    - name: Install Dependencies and Run Python Tests
      if: ${{ inputs.service == 'backend' }}
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage unittest-xml-reporting
        coverage run --omit='**/migrations/*' --omit='**/tests.py' --omit='**/admin.py' manage.py test apps --testrunner=xmlrunner.extra.djangotestrunner.XMLTestRunner
        coverage xml -o coverage/cobertura-coverage.xml

    - name: Set up Node.js
      if: ${{ inputs.service != 'backend' }}
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ inputs.service }}/package-lock.json
    - name: Install Dependencies and Run Node Tests
      if: ${{ inputs.service != 'backend' }}
      working-directory: ./${{ inputs.service }}
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: '${{ inputs.service }}/TEST-*.xml'
        annotate_only: true

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: success() || failure() # always run even if the previous step fails
      with:
        filename: ${{ inputs.service }}/coverage/cobertura-coverage.xml
        badge: true
        format: markdown
        # hide_branch_rate: false
        # hide_complexity: true
        indicators: true
        output: both

    - name: Add Code Coverage to Job Summary
      if: success() || failure() # always run even if the previous step fails
      run: echo cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY


    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
          projectBaseDir: ${{ inputs.service }}/
