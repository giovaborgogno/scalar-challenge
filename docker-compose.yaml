version: '3.8'
services:
  backend:
    container_name: scalar_backend
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      DOMAIN: ${DOMAIN}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
    build:
      context: ./backend
    volumes:
      - backend_data:/app/data
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    container_name: scalar_frontend
    environment:
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      NEXT_PUBLIC_APP_API_URL: ${NEXT_PUBLIC_APP_API_URL}
      NEXT_PUBLIC_APP_SOCKET_URL: ${NEXT_PUBLIC_APP_SOCKET_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
    build:
      context: ./frontend
    ports:
      - 3000:3000
    volumes:
      - frontend_node_modules:/app/node_modules
    networks:
      - app-network
    depends_on:
      - backend
      - socket

  socket:
    container_name: scalar_socket
    environment:
      PORT: ${PORT}
      DEBUG: ${DEBUG}
      ORIGIN_URL: ${ORIGIN_URL}
      MONGO_CONNECTION_STRING: ${MONGO_CONNECTION_STRING}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    build:
      context: ./socket
    ports:
      - 4000:4000
    volumes:
      - socket_node_modules:/app/node_modules
    depends_on:
      - mongodb
    networks:
      - app-network

  db:
    image: postgres
    container_name: scalar_postgresql
    restart: always
    environment:
        POSTGRES_DB: scalar
        POSTGRES_USER: scalar
        POSTGRES_PASSWORD: scalar
    ports:
      - 5433:5432
    volumes:
      - .dbdata:/var/lib/postgresql
    networks:
      - app-network

  mongodb:
    image: mongo:6-jammy
    container_name: scalar_mongodb
    restart: always
    ports:
      - '27018:27017'
    volumes:
      - dbdata6:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  dbdata6:
  frontend_node_modules:
  socket_node_modules:
  backend_data: